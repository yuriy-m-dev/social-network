{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","to","id","activeClassName","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToProps","state","isAuth","auth","compose","connect","dispatch","sendNewMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,iHCWbC,EARI,SAACC,GAClB,OACE,yBAAKC,UAAWC,IAAEC,QAChB,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIC,gBAAiBJ,IAAEK,QAASP,EAAMQ,Q,kBCE9DC,EANC,SAACT,GACf,OACE,yBAAKC,UAAWC,IAAEQ,SAAUV,EAAMU,U,kCCwBhCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,yBAAjBD,EAdL,SAACd,GAEtB,OACE,0BAAMgB,SAAUhB,EAAMiB,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOV,KAAK,iBAAiBW,YAAY,qBAAqBC,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,MAE1G,6BACE,qDAQOa,EAvCC,SAACxB,GACf,IAAIyB,EAAkBzB,EAAM0B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMH,GAAIwB,EAAExB,QACrFyB,EAAmB9B,EAAM0B,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASL,GAAI2B,EAAE3B,QAM9F,OACE,yBAAKJ,UAAWC,IAAEyB,SAChB,yBAAK1B,UAAWC,IAAE+B,cACfR,GAEH,yBAAKxB,UAAWC,IAAE6B,UACfD,EACD,kBAACjB,EAAD,CAAqBG,SAXP,SAACkB,GACnBlC,EAAMmC,YAAYD,EAAOE,sB,gDCTzBC,EAAkB,SAACC,GACrB,MAAO,CACLC,OAAQD,EAAME,KAAKD,S,OCeRE,sBACbC,aAfsB,SAACJ,GACvB,MAAO,CACLZ,YAAaY,EAAMZ,gBAII,SAACiB,GAC1B,MAAO,CACLR,YAAa,SAACC,GACZO,EAASC,YAA4BR,UDNX,SAACS,GAAe,IAExCC,EAFuC,uKAIzC,OAAKC,KAAK/C,MAAMuC,OACT,kBAACM,EAAcE,KAAK/C,OADI,kBAAC,IAAD,CAAUI,GAAG,eAJH,GAEb4C,IAAMH,WAQtC,OADgCH,YAAQL,EAARK,CAAyBI,KCE5CL,CAGbjB","file":"static/js/3.f66fa492.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__aCyRR\",\"dialogsItems\":\"Dialogs_dialogsItems__3INyO\",\"messages\":\"Dialogs_messages__2BD9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__RSp2U\",\"active\":\"DialogItem_active__2dedK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3VDNn\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={'/dialogs/' + props.id} activeClassName={s.active}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { required, maxLengthCreator } from \"../../utils/validators/validator\";\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n  let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messagesElements}\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name='newMessageBody' placeholder='Enter your message' component={Textarea} validate={[required, maxLength50]}/>\r\n      </div>\r\n      <div>\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component{\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login'/>\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let ConnectedWithAuthRedirect = connect(mapStateToProps)(RedirectComponent);\r\n  return ConnectedWithAuthRedirect;\r\n}","import React from \"react\";\r\nimport {sendNewMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendNewMessageActionCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}